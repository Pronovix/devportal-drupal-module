language: bash

sudo: required

services:
  - docker

addons:
  apt:
    packages:
      - docker-ce

cache:
  directories:
    - $HOME/.composer/cache/files

notifications:
  email:
    on_success: never
    on_failure: always

env:
  global:
    - DOCKER_COMPOSE_VERSION=1.24.0
    - THREADS=4
    - DRUPAL_MODULE_NAME=devportal
  matrix:
    - CHECK_CS=true
    # Run API Reference sub-module tests.
    - TEST_ROOT="modules/contrib/${DRUPAL_MODULE_NAME}/modules/api_reference/tests"
    - TEST_ROOT="modules/contrib/${DRUPAL_MODULE_NAME}/modules/api_reference/tests" DEPENDENCIES="--prefer-lowest"
    - TEST_ROOT="modules/contrib/${DRUPAL_MODULE_NAME}/modules/api_reference/tests" DB_DRIVER=pgsql DB_IMAGE=wodby/postgres:9.6-1.3.1
    - TEST_ROOT="modules/contrib/${DRUPAL_MODULE_NAME}/modules/api_reference/tests" PHP_IMAGE=wodby/drupal-php:7.2-dev-4.5.0
    - TEST_ROOT="modules/contrib/${DRUPAL_MODULE_NAME}/modules/api_reference/tests" DRUPAL_CORE=8.7.x-dev DEPENDENCIES="--prefer-lowest"

matrix:
  allow_failures:
    - env: TEST_ROOT="modules/contrib/${DRUPAL_MODULE_NAME}/modules/api_reference/tests" DRUPAL_CORE=8.7.x-dev DEPENDENCIES="--prefer-lowest"
  fast_finish: true

# TODO Cache PHP service builds (common parts of the built, like Drupal core install, for a day or so).
before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - cd .travis && chmod u+x *.sh
  - docker-compose up -d --build
  - docker-compose ps
  - docker-compose run --rm php /opt/drupal-module/.travis/prepare-test-env.sh

script:
  - set -e
  # Do not report warnings (like Drupal.Semantics.FunctionT.NotLiteralString) on Travis CI.
  # TODO Use selective disabling instead in tested files.
  - if [ -n "${CHECK_CS}" ]; then docker-compose run --rm php vendor/bin/phpcs -s -n --colors --standard=build/modules/contrib/${DRUPAL_MODULE_NAME}/phpcs.xml.dist build/modules/contrib/${DRUPAL_MODULE_NAME}; fi
  # Do not exist if a PHPUnit test fails, we would like to run all scripts from
  # after_* sections.
  - set +e
  - docker-compose run --rm php /opt/drupal-module/.travis/run-test.sh

after_failure:
  # Push log file and browser output to an our logs repository.
  - ./push-logs.sh
